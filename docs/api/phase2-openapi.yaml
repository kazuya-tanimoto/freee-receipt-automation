openapi: 3.0.3
info:
  title: freee Receipt Automation - Phase 2 API
  description: |
    Gmail and Google Drive integration API for automated receipt processing.
    
    ## Overview
    This API enables seamless integration with Gmail and Google Drive for automated
    receipt extraction and processing. It provides secure OAuth2.0 authentication
    with PKCE for accessing Google services.
    
    ## Security
    All endpoints require OAuth2.0 authentication with appropriate scopes.
    Rate limiting is enforced per the Google API quotas.
    
    ## Rate Limits
    - Gmail API: 250 quota units per user per 100 seconds
    - Drive API: 1000 requests per 100 seconds per user
    
  version: 2.1.0
  contact:
    name: freee Receipt Automation
    url: https://github.com/your-username/freee-receipt-automation
  license:
    name: Private License
    url: https://github.com/your-username/freee-receipt-automation/blob/main/LICENSE

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://your-domain.vercel.app/api
    description: Production server

security:
  - OAuth2AuthorizationCode: []

paths:
  # OAuth Authentication Endpoints
  /auth/oauth/initiate:
    post:
      summary: Initiate OAuth2.0 authorization flow
      description: |
        Starts the OAuth2.0 authorization flow with PKCE for Gmail/Drive access.
        Returns authorization URL for user consent.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthInitiateRequest'
      responses:
        '200':
          description: Authorization URL generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthInitiateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /auth/oauth/callback:
    post:
      summary: Handle OAuth2.0 callback
      description: |
        Processes the OAuth2.0 authorization callback and exchanges
        authorization code for access tokens.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthCallbackRequest'
      responses:
        '200':
          description: Tokens exchanged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /auth/oauth/refresh:
    post:
      summary: Refresh access tokens
      description: |
        Refreshes expired access tokens using refresh token.
        Implements automatic token rotation for security.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthRefreshRequest'
      responses:
        '200':
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # Gmail API Integration
  /gmail/messages:
    get:
      summary: List Gmail messages
      description: |
        Retrieves Gmail messages with optional filtering.
        Supports pagination and search queries.
      tags:
        - Gmail
      parameters:
        - name: q
          in: query
          description: Gmail search query (e.g., "has:attachment")
          schema:
            type: string
            example: "has:attachment from:receipts@example.com"
        - name: maxResults
          in: query
          description: Maximum number of messages to return
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 100
        - name: pageToken
          in: query
          description: Token for pagination
          schema:
            type: string
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GmailMessagesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /gmail/messages/{messageId}:
    get:
      summary: Get Gmail message details
      description: |
        Retrieves detailed information about a specific Gmail message
        including attachments metadata.
      tags:
        - Gmail
      parameters:
        - name: messageId
          in: path
          required: true
          description: Gmail message ID
          schema:
            type: string
        - name: format
          in: query
          description: Message format
          schema:
            type: string
            enum: [minimal, full, raw, metadata]
            default: full
      responses:
        '200':
          description: Message details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GmailMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /gmail/messages/{messageId}/attachments/{attachmentId}:
    get:
      summary: Download Gmail attachment
      description: |
        Downloads a specific attachment from a Gmail message.
        Returns the attachment data as base64 encoded content.
      tags:
        - Gmail
      parameters:
        - name: messageId
          in: path
          required: true
          description: Gmail message ID
          schema:
            type: string
        - name: attachmentId
          in: path
          required: true
          description: Attachment ID from message
          schema:
            type: string
      responses:
        '200':
          description: Attachment downloaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GmailAttachment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  # Google Drive API Integration
  /drive/files:
    get:
      summary: List Drive files
      description: |
        Retrieves files from Google Drive with optional filtering.
        Supports pagination and search queries.
      tags:
        - Drive
      parameters:
        - name: q
          in: query
          description: Drive search query
          schema:
            type: string
            example: "mimeType='image/jpeg' or mimeType='application/pdf'"
        - name: pageSize
          in: query
          description: Maximum number of files to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: pageToken
          in: query
          description: Token for pagination
          schema:
            type: string
        - name: fields
          in: query
          description: Partial response fields
          schema:
            type: string
            default: "files(id,name,mimeType,size,createdTime,modifiedTime)"
      responses:
        '200':
          description: Files retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveFilesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Upload file to Drive
      description: |
        Uploads a receipt file to Google Drive with metadata.
        Supports multipart upload for larger files.
      tags:
        - Drive
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriveUploadRequest'
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /drive/files/{fileId}:
    get:
      summary: Get Drive file metadata
      description: |
        Retrieves metadata for a specific file in Google Drive.
      tags:
        - Drive
      parameters:
        - name: fileId
          in: path
          required: true
          description: Drive file ID
          schema:
            type: string
        - name: fields
          in: query
          description: Partial response fields
          schema:
            type: string
            default: "*"
      responses:
        '200':
          description: File metadata retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete Drive file
      description: |
        Moves a file to trash in Google Drive.
        File can be restored from trash within 30 days.
      tags:
        - Drive
      parameters:
        - name: fileId
          in: path
          required: true
          description: Drive file ID
          schema:
            type: string
      responses:
        '204':
          description: File deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /drive/files/{fileId}/download:
    get:
      summary: Download Drive file content
      description: |
        Downloads the actual content of a file from Google Drive.
        Returns binary data for the file.
      tags:
        - Drive
      parameters:
        - name: fileId
          in: path
          required: true
          description: Drive file ID
          schema:
            type: string
      responses:
        '200':
          description: File content downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /drive/files/{fileId}/permissions:
    get:
      summary: List file permissions
      description: |
        Retrieves the permissions for a specific file in Google Drive.
      tags:
        - Drive
      parameters:
        - name: fileId
          in: path
          required: true
          description: Drive file ID
          schema:
            type: string
      responses:
        '200':
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePermissionsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create file permission
      description: |
        Creates a new permission for a file in Google Drive.
        Allows sharing files with specific users or making them public.
      tags:
        - Drive
      parameters:
        - name: fileId
          in: path
          required: true
          description: Drive file ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrivePermissionRequest'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePermission'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    OAuth2AuthorizationCode:
      type: oauth2
      description: |
        OAuth2.0 Authorization Code flow with PKCE for Gmail and Drive access.
        Supports offline access with refresh token rotation.
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            'https://www.googleapis.com/auth/gmail.readonly': Read Gmail messages and attachments
            'https://www.googleapis.com/auth/drive.file': Create, read, update, and delete files in Drive
            'https://www.googleapis.com/auth/drive.metadata.readonly': Read Drive file metadata

  schemas:
    # Authentication Schemas
    OAuthInitiateRequest:
      type: object
      required:
        - provider
        - scopes
      properties:
        provider:
          type: string
          enum: [google]
          description: OAuth provider
        scopes:
          type: array
          items:
            type: string
          description: Requested OAuth scopes
          example: 
            - "https://www.googleapis.com/auth/gmail.readonly"
            - "https://www.googleapis.com/auth/drive.file"
        redirectUri:
          type: string
          format: uri
          description: OAuth redirect URI
          example: "http://localhost:3000/auth/callback"

    OAuthInitiateResponse:
      type: object
      required:
        - authorizationUrl
        - state
        - codeChallenge
      properties:
        authorizationUrl:
          type: string
          format: uri
          description: Authorization URL for user consent
        state:
          type: string
          description: CSRF protection state parameter
        codeChallenge:
          type: string
          description: PKCE code challenge
        codeChallengeMethod:
          type: string
          enum: [S256]
          description: PKCE code challenge method

    OAuthCallbackRequest:
      type: object
      required:
        - code
        - state
        - codeVerifier
      properties:
        code:
          type: string
          description: Authorization code from OAuth provider
        state:
          type: string
          description: State parameter for CSRF protection
        codeVerifier:
          type: string
          description: PKCE code verifier
        redirectUri:
          type: string
          format: uri
          description: OAuth redirect URI used in authorization

    OAuthRefreshRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: Refresh token for obtaining new access token

    OAuthTokenResponse:
      type: object
      required:
        - accessToken
        - expiresIn
        - tokenType
      properties:
        accessToken:
          type: string
          description: OAuth access token
        refreshToken:
          type: string
          description: OAuth refresh token (if available)
        expiresIn:
          type: integer
          description: Access token expiry time in seconds
        tokenType:
          type: string
          enum: [Bearer]
          description: Token type
        scope:
          type: string
          description: Granted scopes

    # Gmail Schemas
    GmailMessagesResponse:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GmailMessageSummary'
        nextPageToken:
          type: string
          description: Token for next page of results
        resultSizeEstimate:
          type: integer
          description: Estimated total number of results

    GmailMessageSummary:
      type: object
      required:
        - id
        - threadId
      properties:
        id:
          type: string
          description: Gmail message ID
        threadId:
          type: string
          description: Gmail thread ID

    GmailMessage:
      type: object
      required:
        - id
        - threadId
        - payload
      properties:
        id:
          type: string
          description: Gmail message ID
        threadId:
          type: string
          description: Gmail thread ID
        labelIds:
          type: array
          items:
            type: string
          description: Applied Gmail labels
        snippet:
          type: string
          description: Short message snippet
        historyId:
          type: string
          description: Gmail history ID
        internalDate:
          type: string
          description: Internal message date
        payload:
          $ref: '#/components/schemas/GmailMessagePayload'
        sizeEstimate:
          type: integer
          description: Estimated message size in bytes

    GmailMessagePayload:
      type: object
      properties:
        partId:
          type: string
          description: Part ID
        mimeType:
          type: string
          description: MIME type
        filename:
          type: string
          description: Filename (for attachments)
        headers:
          type: array
          items:
            $ref: '#/components/schemas/GmailHeader'
        body:
          $ref: '#/components/schemas/GmailMessageBody'
        parts:
          type: array
          items:
            $ref: '#/components/schemas/GmailMessagePayload'
          description: Message parts (for multipart messages)

    GmailHeader:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: Header name
        value:
          type: string
          description: Header value

    GmailMessageBody:
      type: object
      properties:
        attachmentId:
          type: string
          description: Attachment ID (for attachments)
        size:
          type: integer
          description: Body size in bytes
        data:
          type: string
          description: Base64-encoded body data

    GmailAttachment:
      type: object
      required:
        - attachmentId
        - size
        - data
      properties:
        attachmentId:
          type: string
          description: Attachment ID
        size:
          type: integer
          description: Attachment size in bytes
        data:
          type: string
          description: Base64-encoded attachment data

    # Google Drive Schemas
    DriveFilesResponse:
      type: object
      required:
        - files
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/DriveFile'
        nextPageToken:
          type: string
          description: Token for next page of results
        incompleteSearch:
          type: boolean
          description: Whether search was incomplete

    DriveFile:
      type: object
      required:
        - id
        - name
        - mimeType
      properties:
        id:
          type: string
          description: Drive file ID
        name:
          type: string
          description: File name
        mimeType:
          type: string
          description: File MIME type
        description:
          type: string
          description: File description
        parents:
          type: array
          items:
            type: string
          description: Parent folder IDs
        size:
          type: string
          description: File size in bytes
        createdTime:
          type: string
          format: date-time
          description: File creation time
        modifiedTime:
          type: string
          format: date-time
          description: File modification time
        webContentLink:
          type: string
          format: uri
          description: Link to download file content
        webViewLink:
          type: string
          format: uri
          description: Link to view file in Drive

    DriveUploadRequest:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: File content to upload
        name:
          type: string
          description: File name
        parents:
          type: array
          items:
            type: string
          description: Parent folder IDs
        description:
          type: string
          description: File description

    DrivePermissionsResponse:
      type: object
      required:
        - permissions
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/DrivePermission'

    DrivePermissionRequest:
      type: object
      required:
        - role
        - type
      properties:
        role:
          type: string
          enum: [owner, organizer, fileOrganizer, writer, commenter, reader]
          description: Permission role
        type:
          type: string
          enum: [user, group, domain, anyone]
          description: Permission type
        emailAddress:
          type: string
          format: email
          description: Email address (for user/group types)
        domain:
          type: string
          description: Domain name (for domain type)

    DrivePermission:
      type: object
      required:
        - id
        - role
        - type
      properties:
        id:
          type: string
          description: Permission ID
        role:
          type: string
          enum: [owner, organizer, fileOrganizer, writer, commenter, reader]
          description: Permission role
        type:
          type: string
          enum: [user, group, domain, anyone]
          description: Permission type
        emailAddress:
          type: string
          format: email
          description: Email address
        domain:
          type: string
          description: Domain name
        displayName:
          type: string
          description: Display name

    # Error Schemas
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        path:
          type: string
          description: Request path that caused error
        requestId:
          type: string
          description: Unique request identifier

    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            details:
              type: object
              properties:
                field:
                  type: string
                  description: Field that failed validation
                code:
                  type: string
                  description: Validation error code

    RateLimitError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            details:
              type: object
              properties:
                retryAfter:
                  type: integer
                  description: Seconds to wait before retry
                quotaUser:
                  type: string
                  description: Quota user identifier

  responses:
    BadRequest:
      description: Bad request - invalid parameters or request format
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    PayloadTooLarge:
      description: Request payload too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimit:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimitError'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  examples:
    GmailSearchQuery:
      summary: Gmail search for receipt attachments
      value: "has:attachment (from:receipts@store.com OR subject:receipt OR subject:invoice)"

    DriveSearchQuery:
      summary: Drive search for receipt images
      value: "mimeType='image/jpeg' or mimeType='image/png' or mimeType='application/pdf'"

tags:
  - name: Authentication
    description: OAuth2.0 authentication and token management
  - name: Gmail
    description: Gmail API integration for receipt email processing
  - name: Drive
    description: Google Drive API integration for receipt file management

externalDocs:
  description: Gmail API Documentation
  url: https://developers.google.com/gmail/api