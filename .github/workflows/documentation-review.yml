name: Documentation Review

on:
  pull_request:
    paths:
      - '**.md'
      - 'docs/**'

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Review Documentation
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const summaryMode = process.env.SUMMARY_MODE || 'concise';
            const changedFiles = pr.changed_files;
            const mdFiles = pr.files.filter(f => f.filename.endsWith('.md'));

            let reviewComment = `## Documentation Review Summary\n\n`;
            reviewComment += `Changed files: ${changedFiles}\n`;
            reviewComment += `Markdown files: ${mdFiles.length}\n\n`;

            if (summaryMode === 'verbose') {
              reviewComment += `### Detailed Changes\n\n`;
              for (const file of mdFiles) {
                reviewComment += `#### ${file.filename}\n`;
                reviewComment += `- Status: ${file.status}\n`;
                reviewComment += `- Changes: +${file.additions} -${file.deletions}\n\n`;
              }
            }

            reviewComment += `### Review Points\n\n`;
            reviewComment += `1. Language consistency between EN/JA versions\n`;
            reviewComment += `2. Security guidelines compliance\n`;
            reviewComment += `3. Documentation structure and formatting\n`;
            reviewComment += `4. Link validity and references\n`;
            reviewComment += `5. File size and token limits\n\n`;

            reviewComment += `### Next Steps\n\n`;
            reviewComment += `- [ ] Verify language consistency\n`;
            reviewComment += `- [ ] Check security guidelines\n`;
            reviewComment += `- [ ] Review documentation structure\n`;
            reviewComment += `- [ ] Validate all links\n`;
            reviewComment += `- [ ] Confirm file size limits\n`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reviewComment
            }); 