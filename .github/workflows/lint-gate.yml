name: 🚨 Lint Gate (Required)

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint-gate:
    runs-on: ubuntu-latest
    name: Documentation Quality Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false  # Submodules are excluded from lint
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Yarn from committed binary
        run: |
          node .yarn/releases/yarn-4.0.2.cjs --version
          echo "Using committed Yarn binary"
      
      - name: Cache Yarn
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: |
          node .yarn/releases/yarn-4.0.2.cjs --version
          node .yarn/releases/yarn-4.0.2.cjs install --immutable
      
      - name: 🔍 Run Documentation Checks
        id: docs-check
        run: |
          echo "::group::Documentation quality check"
          
          # Run comprehensive documentation check
          if node .yarn/releases/yarn-4.0.2.cjs check:docs; then
            echo "✅ All documentation checks passed"
            echo "docs_passed=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Documentation quality check failed"
            echo "docs_passed=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          echo "::endgroup::"
      
      - name: 🧪 Run Tests
        id: test-check
        run: |
          echo "::group::Test suite execution"
          
          # Run comprehensive test suite
          if node .yarn/releases/yarn-4.0.2.cjs test:run; then
            echo "✅ All tests passed"
            echo "tests_passed=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Tests failed"
            echo "tests_passed=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          echo "::endgroup::"
        env:
          NODE_ENV: test
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test-anon-key
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          SUPABASE_SERVICE_ROLE_KEY: test-service-role-key
      
      - name: 📊 Summary
        if: always()
        run: |
          echo "## 📋 Quality Gate Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          docs_passed="${{ steps.docs-check.outputs.docs_passed }}"
          tests_passed="${{ steps.test-check.outputs.tests_passed }}"
          
          if [ "$docs_passed" = "true" ] && [ "$tests_passed" = "true" ]; then
            echo "✅ **All checks passed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Status" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Documentation quality: Passed" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Test suite: Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Quality standards met. Ready to merge." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Quality checks failed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Status" >> $GITHUB_STEP_SUMMARY
            echo "- $([ \"$docs_passed\" = \"true\" ] && echo \"✅\" || echo \"❌\") Documentation quality" >> $GITHUB_STEP_SUMMARY
            echo "- $([ \"$tests_passed\" = \"true\" ] && echo \"✅\" || echo \"❌\") Test suite" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Please fix the following:" >> $GITHUB_STEP_SUMMARY
            if [ "$docs_passed" != "true" ]; then
              echo "**Documentation Issues:**" >> $GITHUB_STEP_SUMMARY
              echo "1. Run \`yarn check:docs\` locally" >> $GITHUB_STEP_SUMMARY
              echo "2. Fix all reported errors" >> $GITHUB_STEP_SUMMARY
              echo "3. Use \`yarn format:md\` for safe formatting" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
            if [ "$tests_passed" != "true" ]; then
              echo "**Test Issues:**" >> $GITHUB_STEP_SUMMARY
              echo "1. Run \`yarn test:run\` locally" >> $GITHUB_STEP_SUMMARY
              echo "2. Fix all failing tests" >> $GITHUB_STEP_SUMMARY
              echo "3. Ensure test environment is properly configured" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
            echo "**Note**: This PR cannot be merged until all checks pass." >> $GITHUB_STEP_SUMMARY
          fi