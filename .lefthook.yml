pre-commit:
  parallel: true
  commands:
    docs-check:
      run: yarn check:docs
      files: git diff --name-only --cached --diff-filter=d | grep '\.md$' || true
      skip: git diff --name-only --cached --diff-filter=d | grep -q '\.md$' || echo "skip"

    test-check:
      run: yarn test:run
      files: git diff --name-only --cached --diff-filter=d | grep -E '\.(ts|tsx|js|jsx)$' || true
      skip: git diff --name-only --cached --diff-filter=d | grep -qE '\.(ts|tsx|js|jsx)$' || echo "skip"

    file-size-check:
      run: |
        echo "üîç Checking file sizes..."
        warning_files=()
        error_files=()

        # Â§âÊõ¥„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„ÅÆ„Çµ„Ç§„Ç∫„ÉÅ„Çß„ÉÉ„ÇØ
        for file in $(git diff --cached --name-only --diff-filter=d); do
          if [[ -f "$file" && "$file" =~ \.(ts|tsx|js|jsx)$ ]]; then
            lines=$(wc -l < "$file" 2>/dev/null || echo 0)
            if [[ $lines -gt 250 ]]; then
              error_files+=("$file: $lines lines (max: 250)")
            elif [[ $lines -gt 150 ]]; then
              warning_files+=("$file: $lines lines (recommended: 150)")
            fi
          fi
        done

        # Ë≠¶ÂëäË°®Á§∫
        if [[ ${#warning_files[@]} -gt 0 ]]; then
          echo ""
          echo "‚ö†Ô∏è  WARNING: Files exceed recommended size"
          printf '%s\n' "${warning_files[@]}"
          echo ""
          echo "Consider splitting these files by functionality"
        fi

        # „Ç®„É©„ÉºË°®Á§∫
        if [[ ${#error_files[@]} -gt 0 ]]; then
          echo ""
          echo "üö® FATAL ERROR: Files exceed maximum size limit"
          printf '%s\n' "${error_files[@]}"
          echo ""
          echo "‚ùå COMMITS BLOCKED"
          echo "Files must be split before committing (max: 250 lines)"
          exit 1
        fi

        echo "‚úÖ All files within acceptable limits"